<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KwC</name>
    </assembly>
    <members>
        <member name="M:KwC.Controllers.VisitingController.GetStatus">
            <summary>
            获取状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:KwC.Services.LruCacher`2">
            <summary>
            lru缓存器
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:KwC.Services.LruCacher`2.Max">
            <summary>
            最大个数
            </summary>
        </member>
        <member name="P:KwC.Services.LruCacher`2.Count">
            <summary>
            当前的个数
            </summary>
        </member>
        <member name="M:KwC.Services.LruCacher`2.Clear">
            <summary>
            清除当前的缓存
            </summary>
        </member>
        <member name="M:KwC.Services.LruCacher`2.Remove(`0,`1@)">
            <summary>
            移除缓存
            </summary>
            <param name="key">缓存键</param>
            <returns></returns>
        </member>
        <member name="M:KwC.Services.LruCacher`2.Get(`0)">
            <summary>
            获取某一项，如跟失败返回默认值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KwC.Services.LruCacher`2.ContainsKey(`0)">
            <summary>
            键是否在缓存中
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KwC.Services.LruCacher`2.Add(`0,`1)">
            <summary>
            添加一项
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:Kw.Comic.Results.EntityResult`1">
            <summary>
            表示实体结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kw.Comic.Results.EntityResult`1.Data">
            <summary>
            获取或设置一个值，表示附带的实体
            </summary>
        </member>
        <member name="T:Kw.Comic.Results.KnowResultCodes">
            <summary>
            表示已知的结果代码
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.Succeed">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.InputError">
            <summary>
            输入数据异常
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.DataError">
            <summary>
            数据异常
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.NotFound">
            <summary>
            找不到数据
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.ArgError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.AlreadyExist">
            <summary>
            已经存在了
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.KnowResultCodes.Busy">
            <summary>
            在忙
            </summary>
        </member>
        <member name="T:Kw.Comic.Results.Result">
            <summary>
            表示默认的结果
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.Result.SucceedResult">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Kw.Comic.Results.Result.BusyResult">
            <summary>
            繁忙
            </summary>
        </member>
        <member name="M:Kw.Comic.Results.Result.#ctor">
            <summary>
            初始化类型<see cref="T:Kw.Comic.Results.Result"/>
            </summary>
        </member>
        <member name="M:Kw.Comic.Results.Result.#ctor(System.Boolean)">
            <summary>
            从参数<paramref name="readOnly"/>创建类型<see cref="T:Kw.Comic.Results.Result"/>
            </summary>
            <param name="readOnly">是否只读模式</param>
        </member>
        <member name="M:Kw.Comic.Results.Result.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            从参数<see cref="F:Kw.Comic.Results.Result.code"/>,<see cref="F:Kw.Comic.Results.Result.msg"/>,<see cref="F:Kw.Comic.Results.Result.readOnly"/>创建类型<see cref="T:Kw.Comic.Results.Result"/>
            </summary>
            <param name="code">代码</param>
            <param name="msg">消息</param>
            <param name="readOnly">是否只读</param>
        </member>
        <member name="P:Kw.Comic.Results.Result.Code">
            <summary>
            获取或设置一个值，表示结果代码
            </summary>
        </member>
        <member name="P:Kw.Comic.Results.Result.Msg">
            <summary>
            获取或设置一个值，表示附带的信息
            </summary>
        </member>
        <member name="P:Kw.Comic.Results.Result.Succeed">
            <summary>
            获取一个值，表示是否成功
            </summary>
        </member>
        <member name="M:Kw.Comic.Results.Result.IsReadOnly">
            <summary>
            调用以确定当前类型是否只读
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kw.Comic.Results.Result.ThrowIfReadOnly">
            <summary>
            抛出，当是只读模式时
            </summary>
        </member>
        <member name="T:Kw.Comic.Results.EntitySetResult`1">
            <summary>
            表示实体集合结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kw.Comic.Results.EntitySetResult`1.Datas">
            <summary>
            获取或设置一个值，表示附带的集合
            </summary>
        </member>
        <member name="P:Kw.Comic.Results.EntitySetResult`1.Total">
            <summary>
            获取或设置一个值，表示数据的总数
            </summary>
        </member>
        <member name="P:Kw.Comic.Results.EntitySetResult`1.Skip">
            <summary>
            获取或设置一个值，表示跳过的个数
            </summary>
        </member>
        <member name="P:Kw.Comic.Results.EntitySetResult`1.Take">
            <summary>
            获取或设置一个值，表示获取的个数
            </summary>
        </member>
        <member name="T:Kw.Comic.Results.SetResult`1">
            <summary>
            表示集合结果
            </summary>
            <typeparam name="T">项类型</typeparam>
        </member>
        <member name="T:Kw.Comic.Services.ComicReflection">
            <summary>Holder for reflection information generated from Protos/comic.proto</summary>
        </member>
        <member name="P:Kw.Comic.Services.ComicReflection.Descriptor">
            <summary>File descriptor for Protos/comic.proto</summary>
        </member>
        <member name="F:Kw.Comic.Services.ChapterSnaphot.UrlFieldNumber">
            <summary>Field number for the "Url" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ChapterSnaphot.TitleFieldNumber">
            <summary>Field number for the "Title" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.PageSnapshot.UrlFieldNumber">
            <summary>Field number for the "Url" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.PageSnapshot.NameFieldNumber">
            <summary>Field number for the "Name" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ComicSnapshot.ComicUrlFieldNumber">
            <summary>Field number for the "ComicUrl" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ComicSnapshot.NameFieldNumber">
            <summary>Field number for the "Name" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ComicSnapshot.ChapterFieldNumber">
            <summary>Field number for the "Chapter" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ComicSnapshot.PageFieldNumber">
            <summary>Field number for the "Page" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ProcessInfoResponse.TypeFieldNumber">
            <summary>Field number for the "Type" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.ProcessInfoResponse.SnapshotFieldNumber">
            <summary>Field number for the "Snapshot" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.PositionResponse.CurrentFieldNumber">
            <summary>Field number for the "Current" field.</summary>
        </member>
        <member name="F:Kw.Comic.Services.PositionResponse.TotalFieldNumber">
            <summary>Field number for the "Total" field.</summary>
        </member>
        <member name="P:Kw.Comic.Services.ComicService.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Kw.Comic.Services.ComicService.ComicServiceBase">
            <summary>Base class for server-side implementations of ComicService</summary>
        </member>
        <member name="M:Kw.Comic.Services.ComicService.BindService(Kw.Comic.Services.ComicService.ComicServiceBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Kw.Comic.Services.ComicService.BindService(Grpc.Core.ServiceBinderBase,Kw.Comic.Services.ComicService.ComicServiceBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
    </members>
</doc>
