<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Anf.Desktop.ViewModels"
             xmlns:s="using:Avalonia.Controls.PanAndZoom"
             xmlns:kwc="using:Anf"
             x:Name="VisitingView"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Anf.Desktop.Views.VisitingView">
  <Design.DataContext>
    <vm:AvalonVisitingViewModel/>
  </Design.DataContext>
  <UserControl.Styles>
    <Style Selector="Border.flow">
      <Setter Property="Grid.RowSpan" Value="2"/>
      <Setter Property="VerticalAlignment" Value="Bottom"/>
      <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
      <Setter Property="Padding" Value="8,4"/>
      <Setter Property="CornerRadius" Value="8"/>
      <Setter Property="Margin" Value="4,8"/>
    </Style>
  </UserControl.Styles>
  <UserControl.Resources>
    <ContextMenu x:Key="ControlMenu">
      <MenuItem Header="{Binding DataContext.CurrentChapter.Title,ElementName=Rep}" IsEnabled="False"/>
      <MenuItem Header="复制">
        <MenuItem Header="名字" Command="{Binding DataContext.CopyTitleCommand,ElementName=Rep,Mode=OneTime}"/>
        <MenuItem Header="实体" Command="{Binding DataContext.CopyComicEntityCommand,ElementName=Rep,Mode=OneTime}"/>
        <MenuItem Header="地址" Command="{Binding DataContext.CopyComicCommand,ElementName=Rep,Mode=OneTime}"/>
        <MenuItem Header="章节" Command="{Binding DataContext.CopyChapterCommand,ElementName=Rep,Mode=OneTime}"/>
      </MenuItem>
      <MenuItem Header="打开">
        <MenuItem Header="漫画" Command="{Binding DataContext.OpenComicCommand,ElementName=Rep,Mode=OneTime}"/>
        <MenuItem Header="章节" Command="{Binding DataContext.OpenChapterCommand,ElementName=Rep,Mode=OneTime}"/>
      </MenuItem>
      <MenuItem Header="控制">
        <MenuItem Header="上一章" Command="{Binding DataContext.PrevChapterCommand,ElementName=Rep,Mode=OneTime}"/>
        <MenuItem Header="下一章" Command="{Binding DataContext.NextChapterCommand,ElementName=Rep,Mode=OneTime}"/>
      </MenuItem>
      <MenuItem Header="-" IsEnabled="False"/>
      <MenuItem Header="保存图片" CommandParameter="{Binding}" Command="{Binding DataContext.SaveImageCommand,ElementName=Rep,Mode=OneTime}"></MenuItem>
      <MenuItem Header="重载图片" Command="{Binding ReLoadCommand,Mode=OneTime}"/>
      <MenuItem Header="-" IsEnabled="False"/>
      <MenuItem Header="保存封面" IsEnabled="{Binding DataContext.HasLogo,ElementName=Rep}" Command="{Binding DataContext.SaveLogoCommand,ElementName=Rep,Mode=OneTime}"></MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="ItemDt">
      <Grid>
        <Border IsVisible="{Binding LoadSucceed}" ContextMenu="{StaticResource ControlMenu}">
          <Image RenderOptions.BitmapInterpolationMode="HighQuality" Stretch="None" Source="{Binding Resource}" MinHeight="200"></Image>
        </Border>
        <StackPanel IsVisible="{Binding HasException}" Orientation="Vertical" HorizontalAlignment="Center">
          <TextBlock VerticalAlignment="Center" Text="{Binding Exception}" TextWrapping="Wrap" MaxHeight="400">
            <ToolTip.Tip>
              <TextBlock Text="{Binding Exception}"/>
            </ToolTip.Tip>
          </TextBlock>
          <Button MaxWidth="200" HorizontalAlignment="Center" Content="Reload" Command="{Binding LoadCommand}" Margin="0,10,0,0"/>
        </StackPanel>
      </Grid>
    </DataTemplate>
  </UserControl.Resources>
  <Grid>
    <SplitView IsPaneOpen="{Binding LeftPaneOpen,Mode=TwoWay}"
               CompactPaneLength="0"
               DisplayMode="CompactInline">
      <SplitView.Pane>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Grid Margin="0,3">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock FontWeight="Bold" Text="{Binding Name}" VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       TextWrapping="NoWrap"
                       TextTrimming="CharacterEllipsis"
                       ToolTip.Tip="{Binding Name}"/>
          <Button Command="{Binding ClosePaneCommand}" Grid.Column="1" Background="{x:Null}" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch">
            <TextBlock Classes="segoblock" Text="&#xE894;" Foreground="Red"/>
          </Button>
          </Grid>
          <ListBox SelectedItem="{Binding TrulyCurrentComicChapter,Mode=TwoWay}"
                   Items="{Binding ComicEntity.Chapters}"
                   Grid.Row="1"
                   Background="{x:Null}">
            <ListBox.ItemTemplate>
              <DataTemplate DataType="{x:Type kwc:ComicChapter}">
                <TextBlock ToolTip.Tip="{Binding TargetUrl}" Text="{Binding Title}"/>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </Grid>
      </SplitView.Pane>
      <SplitView.Content>
        <Grid>
          <Carousel x:Name="Car"
              Items="{Binding Resources}"
              Background="{x:Null}"
              IsVisible="{Binding Transverse}"
              SelectedItem="{Binding SelectedResource,Mode=TwoWay}">
            <Carousel.ItemTemplate>
              <DataTemplate>
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                  <s:ZoomBorder EnableZoom="{Binding DataContext.EnableZoom,ElementName=Car,Mode=TwoWay}"
                                EnableConstrains="{Binding DataContext.EnableConstrains,ElementName=Car,Mode=TwoWay}"
                                EnableGestureZoom="{Binding DataContext.EnableGesture,ElementName=Car}"
                                EnableGestureRotation="{Binding DataContext.EnableGesture,ElementName=Car}"
                                EnableGestureTranslation="{Binding DataContext.EnableGesture,ElementName=Car}"
                                ZoomSpeed="{Binding DataContext.ZoomSpeed,ElementName=Car,Mode=TwoWay}"
                                Stretch="{Binding DataContext.StretchMode,ElementName=Car,Mode=TwoWay}"
                                MinWidth="{Binding DataContext.MinWidth,ElementName=Car}"
                                MinHeight="{Binding DataContext.MinHeight,ElementName=Car}">
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ItemDt}"/>
                  </s:ZoomBorder>
                </ScrollViewer>
              </DataTemplate>
            </Carousel.ItemTemplate>
          </Carousel>
          <ScrollViewer Name="RepSv" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" IsVisible="{Binding Transverse,Converter={StaticResource RevBoolConverter}}">
            <ItemsRepeater Name="Rep"
                           Background="{x:Null}"
                           Items="{Binding Resources}"
                           ItemTemplate="{StaticResource ItemDt}">
            </ItemsRepeater>
          </ScrollViewer>
        </Grid>
      </SplitView.Content>
    </SplitView>

    <Border Classes="flow" HorizontalAlignment="Left" ClipToBounds="True">
      <ToolTip.Tip>
        <ToolTip>
          <StackPanel Orientation="Vertical">
            <TextBlock>唉，很难做!</TextBlock>
          </StackPanel>
        </ToolTip>
      </ToolTip.Tip>
      <Grid>
        <!--<Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="2"/>
        </Grid.RowDefinitions>-->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
          <StackPanel.Resources>
            <Style x:Key="Tbx" Selector="TextBlock">
              <Setter Property="FontSize" Value="10"/>
            </Style>
          </StackPanel.Resources>
          <TextBlock Text="{Binding ChapterName}"/>
          <TextBlock>(</TextBlock>
          <TextBlock Text="{Binding CurrentPage,Converter={StaticResource AddConverter}}"></TextBlock>
          <TextBlock>/</TextBlock>
          <TextBlock Text="{Binding TotalPage}"></TextBlock>
          <TextBlock>)</TextBlock>
        </StackPanel>
        <!--<ProgressBar VerticalAlignment="Bottom"
                   MaxWidth="40"
                   Grid.Row="1"
                   Minimum="{Binding CurrentChaterCursor.CurrentIndex,Converter={StaticResource AddConverter}}"
                   Value="{Binding CurrentChaterCursor.Count,Converter={StaticResource AddConverter}}"/>-->
      </Grid>
    </Border>
    <Border Classes="flow" IsVisible="{Binding HasStoreBox}" Background="{x:Null}">
      <Border Classes="flow" HorizontalAlignment="Right" IsVisible="{Binding StoreBox.IsSaving}">
        <ToolTip.Tip>
          <ToolTip>
            <TextBlock>我正在保存你的位置，别客气OvO</TextBlock>
          </ToolTip>
        </ToolTip.Tip>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
          <StackPanel.Resources>
            <Style x:Key="Tbx" Selector="TextBlock">
              <Setter Property="FontSize" Value="10"/>
            </Style>
          </StackPanel.Resources>
          <TextBlock>(</TextBlock>
          <TextBlock Text="{Binding StoreBox.AttackModel.CurrentChapter,Converter={StaticResource AddConverter}}"></TextBlock>
          <TextBlock Text=" - "></TextBlock>
          <TextBlock Text="{Binding StoreBox.AttackModel.CurrentPage,Converter={StaticResource AddConverter}}"></TextBlock>
          <TextBlock>)</TextBlock>
        </StackPanel>
      </Border>
    </Border>

    <Border IsVisible="{Binding IsLoading}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource SystemControlBackgroundAltMediumHighBrush}">
      <ExperimentalAcrylicBorder>
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial TintColor="Blue" MaterialOpacity="0.8" TintOpacity="0.87" />
        </ExperimentalAcrylicBorder.Material>
        <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="20,0">
          <StackPanel.Resources>
            <Thickness x:Key="ItemMargin">0,20,0,0</Thickness>
          </StackPanel.Resources>
          <Image Height="400" Source="{Binding LogoImage}" HorizontalAlignment="Center" Margin="{StaticResource ItemMargin}"/>
          <TextBlock FontSize="22" Text="{Binding Name}" HorizontalAlignment="Center" Margin="{StaticResource ItemMargin}"/>
          <TextBlock FontSize="12" Text="正在获取所有资源" HorizontalAlignment="Center" Margin="{StaticResource ItemMargin}"/>
          <ProgressBar IsIndeterminate="{Binding IsLoading}" Margin="0,10,0,0" MaxWidth="300"/>
        </StackPanel>
      </ExperimentalAcrylicBorder>
    </Border>
  </Grid>
</UserControl>
