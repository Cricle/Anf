# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  solutionWeb: 'Platforms\Anf.Web.sln'
  solutionDesktop: 'Platforms\Anf.Desktop.sln'
  solutionTest: 'Platforms\Anf.Test.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: RestoreWeb@2
  inputs:
    restoreSolution: '$(solutionWeb)'

- task: VSBuildWeb@1
  inputs:
    solution: '$(solutionWeb)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: RestoreDesktop@2
  inputs:
    restoreSolution: '$(solutionDesktop)'

- task: VSBuildDesktop@1
  inputs:
    solution: '$(solutionDesktop)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: RestoreTest@1
  inputs:
    restoreSolution: '$(solutionTest)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    solution: '$(solutionTest)'
    arguments: '--configuration $(BuildConfiguration) --collect "XPlat Code coverage" -- RunConfiguration.DisableAppDomain=true'
    testRunTitle: AnfProject.UnitTests

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'
  displayName: 'Install ReportGenerator tool'

- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'
  displayName: 'Create reports'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'